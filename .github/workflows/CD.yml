name: CD

on:
  push:
    branches: [ '**' ]
  pull_request:
    branches: [ '**' ]

jobs:
  build-frontend:
    runs-on: ubuntu-latest

    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2
    - name: Use Node.js
      uses: actions/setup-node@v1
      with:
        node-version: '12.x'

    - name: Set node version env var
      run: echo ::set-env name=NODE_VERSION::$(node --version)

    - uses: actions/cache@v1
      id: cache-dependencies
      with:
        # intentionally cache node_modules instead of yarn cache
        path: node_modules
        key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}-${{ env.NODE_VERSION }}
        restore-keys: |
          ${{ runner.os }}-yarn-

    - name: Install
      if: steps.cache-dependencies.outputs.cache-hit != 'true'
      run: yarn --frozen-lockfile

    - name: Build
      run: yarn build

    - name: Lint
      run: yarn lint

    - name: Test
      run: yarn test

    - name: Escaped Branch Name
      id: collect_subdomain
      # branch name, replacing `/`s with `-`s
      run: echo "::set-output name=branch_name_escaped::$(git rev-parse --abbrev-ref HEAD | tr '/' '-')"

    - name: Deploy Artifacts to GCP
      uses: actions-hub/gcloud@289.0.0
      env:
        PROJECT_ID: npmcharts-210003
        APPLICATION_CREDENTIALS: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}
        CLI: gsutil
      with:
        args: -m cp -r packages/frontend/public gs://npmcharts/deployments/branches/${{ steps.collect_subdomain.outputs.branch_name_escaped }}

    - name: Log deploy preview URL
      run: echo "https://deploy-preview--${{ steps.collect_subdomain.outputs.branch_name_escaped }}.deploys.npmcharts.com"
